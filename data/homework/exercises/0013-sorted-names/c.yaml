title: "Print the 10 longest names, given to at least 2,000 babies in 2014"
points: 1
description: |
  Of the names that have been given to at least 2,000 babies -- male and female combined -- in 2014, print the top 10 in descending order of character length. Note that in a case of a tie, (i.e. 2 names with 10 letters), sort by number of babies.

  The 2,000 baby count is the _combined_ number of boys and girls for a given name. So you'll want to create a new list from the original data that aggregates both boy and girl babies into a single count per name.

expectations:
  output: |
    Christopher        10293
    Alexander          15326
    Charlotte          10055
    Elizabeth           9498
    Sebastian           9246
    Christian           8520
    Gabriella           5051
    Annabelle           4324
    Nathaniel           4257
    Mackenzie           4152


hints: |

  A partial answer for c.py:

  ~~~python
  from os.path import join

  DATADIR = 'tempdata'
  FPATH = join(DATADIR, 'ssa-babynames-nationwide-2014.txt')
  ~~~

  Now we need to create a dictionary derived from the data
  in which every name is a key and points to the
  total number of babies (i.e. both "M" and "F")
  e.g.

        {
            'Mackenzie': 4152
            'Christopher': 10293
        }


  ~~~py
  namesdict = {}
  with open(FPATH) as f:
      for line in f:
          name, sex, babies = line.strip().split(',')
          if namesdict.get(name):
              namesdict[name] += int(babies)
          else:
              namesdict[name] = int(babies)
  ~~~

  This is necessary because the assignment requires that
  we select the longest names from a list of names, each of
  which have been given to at least 2,000 babies
  -- M and F -- so we need to basically rebuild a list that
  is gender-agnostic and is just a list of names and numbers.


  After `namesdict` is populated, we filter it to include only key-value pairs, in which the value (i.e. number of babies) is at least 2,000, as per the assignment requirements.


  Then, finally, with that filtered list of "popular" names, you can then sort it by length of name, then number of babies.


